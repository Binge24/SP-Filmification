
import de.javasoft.plaf.synthetica.SyntheticaBlackMoonLookAndFeel;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Binge2
 */

public class FilmificationGUI extends javax.swing.JFrame 
{
    private ArrayList<JLabel> screenshots = new ArrayList<JLabel>();
    private int numOfImages;
    private int currentIndex;
    private Timer t;
    
    public FilmificationGUI() throws UnsupportedLookAndFeelException, ParseException, URISyntaxException 
    {
        UIManager.setLookAndFeel(new SyntheticaBlackMoonLookAndFeel());
        
        initComponents();
        
        setNumOfImages(11);
        
        setExtendedState(JFrame.MAXIMIZED_BOTH); 
        
        skipToStartButton.setEnabled(false);
        prevButton.setEnabled(false);
        nextButton.setEnabled(false);
        playButton.setEnabled(false);
        skipToEndButton.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elementTypeButtonGroup = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        viewPanel = new javax.swing.JPanel();
        tileViewScrollPane = new javax.swing.JScrollPane();
        tileViewPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        frameNumberLabel = new javax.swing.JLabel();
        frameNumberTextField = new javax.swing.JTextField();
        playButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        skipToStartButton = new javax.swing.JButton();
        skipToEndButton = new javax.swing.JButton();
        algoNameLabel = new javax.swing.JLabel();
        fullViewButton = new javax.swing.JButton();
        tileViewButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Filmification");

        tileViewPanel.setLayout(new java.awt.GridLayout(1, 0));
        tileViewScrollPane.setViewportView(tileViewPanel);

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tileViewScrollPane)
                .addContainerGap())
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tileViewScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );

        frameNumberLabel.setText("Frame Number:");

        frameNumberTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        frameNumberTextField.setFocusable(false);

        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/play.png"))); // NOI18N
        playButton.setPreferredSize(new java.awt.Dimension(50, 50));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        prevButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/prev.png"))); // NOI18N
        prevButton.setPreferredSize(new java.awt.Dimension(40, 40));
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/next.png"))); // NOI18N
        nextButton.setPreferredSize(new java.awt.Dimension(40, 40));
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        skipToStartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/skpToStart.png"))); // NOI18N
        skipToStartButton.setPreferredSize(new java.awt.Dimension(40, 40));
        skipToStartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipToStartButtonActionPerformed(evt);
            }
        });

        skipToEndButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/skpToEnd.png"))); // NOI18N
        skipToEndButton.setPreferredSize(new java.awt.Dimension(40, 40));
        skipToEndButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skipToEndButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(skipToStartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(frameNumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(frameNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(prevButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGap(18, 18, 18)
                .addComponent(skipToEndButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(skipToStartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(frameNumberLabel)
                            .addComponent(frameNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prevButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(skipToEndButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );

        algoNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        algoNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        algoNameLabel.setText("Jacobi Relaxation Technique");

        fullViewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fullView.png"))); // NOI18N
        fullViewButton.setPreferredSize(new java.awt.Dimension(40, 40));
        fullViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullViewButtonActionPerformed(evt);
            }
        });

        tileViewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/tileView.png"))); // NOI18N
        tileViewButton.setPreferredSize(new java.awt.Dimension(40, 40));
        tileViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileViewButtonActionPerformed(evt);
            }
        });

        fileMenu.setText("Film");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });
        fileMenu.add(jSeparator1);

        jMenuItem8.setText("New Film");
        fileMenu.add(jMenuItem8);
        fileMenu.add(jSeparator2);

        jMenuItem10.setText("Open Film");
        fileMenu.add(jMenuItem10);

        jMenuItem11.setText("Open Recent Film");
        fileMenu.add(jMenuItem11);

        jMenu4.setText("Open Sample Films");

        jMenuItem18.setText("Jacobi Relaxation Technique");
        jMenu4.add(jMenuItem18);

        jMenuItem19.setText("Multi-Staged Network");
        jMenu4.add(jMenuItem19);

        fileMenu.add(jMenu4);
        fileMenu.add(jSeparator3);

        jMenuItem9.setText("Save");
        fileMenu.add(jMenuItem9);

        jMenuItem12.setText("Save as...");
        fileMenu.add(jMenuItem12);
        fileMenu.add(jSeparator4);

        jMenu2.setText("Insert Film");

        jMenuItem4.setText("Prepend");
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Append");
        jMenu2.add(jMenuItem5);

        fileMenu.add(jMenu2);
        fileMenu.add(jSeparator5);

        jMenuItem15.setText("Exit");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem15);

        menuBar.add(fileMenu);

        jMenu3.setText("Edit");

        jMenuItem6.setText("Undo");
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Redo");
        jMenu3.add(jMenuItem7);
        jMenu3.add(jSeparator6);

        jMenuItem13.setText("Cut");
        jMenu3.add(jMenuItem13);

        jMenuItem14.setText("Copy");
        jMenu3.add(jMenuItem14);

        jMenuItem16.setText("Paste");
        jMenu3.add(jMenuItem16);

        jMenuItem17.setText("Select All");
        jMenu3.add(jMenuItem17);

        menuBar.add(jMenu3);

        jMenu1.setText("View");

        jMenu5.setText("Split");

        jMenuItem20.setText("Horizontally");
        jMenu5.add(jMenuItem20);

        jMenuItem21.setText("Vertically");
        jMenu5.add(jMenuItem21);

        jMenu1.add(jMenu5);

        menuBar.add(jMenu1);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(423, 423, 423)
                .addComponent(algoNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(422, 422, 422))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tileViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fullViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(algoNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tileViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fullViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1034, 573));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
   
    private void fullViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullViewButtonActionPerformed
        tileViewPanel.setLayout(new java.awt.GridLayout(1, 1));
        
        setCurrentIndex(0);
        frameNumberTextField.setText(String.valueOf(getCurrentIndex() + 1));
        
        skipToStartButton.setEnabled(true);
        prevButton.setEnabled(false);
        nextButton.setEnabled(true);
        playButton.setEnabled(true);
        skipToEndButton.setEnabled(true);
        
        try 
        {
            initScreenshots(getNumOfImages(), "screenshots", "5x5jrt", "png", false);
        } catch (URISyntaxException ex) 
        {
            Logger.getLogger(FilmificationGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        addScreenshotsFullView(0);
    }//GEN-LAST:event_fullViewButtonActionPerformed
    
    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        if(getCurrentIndex() > 0)
        {
            addScreenshotsFullView(getCurrentIndex() - 1);
            setCurrentIndex(getCurrentIndex() - 1);
            frameNumberTextField.setText(String.valueOf(getCurrentIndex() + 1));
        }
        
        updatePrevAndNext();
    }//GEN-LAST:event_prevButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if(getCurrentIndex() < getNumOfImages())
        {
            addScreenshotsFullView(getCurrentIndex() + 1);
            setCurrentIndex(getCurrentIndex() + 1);
            frameNumberTextField.setText(String.valueOf(getCurrentIndex() + 1));
        }
        
        updatePrevAndNext();
    }//GEN-LAST:event_nextButtonActionPerformed

    public void updatePrevAndNext()
    {
        if(getCurrentIndex() < (getNumOfImages() - 1))
        {
            nextButton.setEnabled(true);
        }
        else
        {
            nextButton.setEnabled(false);
        }
        
        if(getCurrentIndex() > 0)
        {
            prevButton.setEnabled(true);
        }
        else
        {
            prevButton.setEnabled(false);
        }
    }
    
    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        tileViewPanel.setLayout(new java.awt.GridLayout(1, 1));
       
        setCurrentIndex(0);
        prevButton.setEnabled(false);
        nextButton.setEnabled(false);
        playButton.setEnabled(false);
        
        JComponent myComponent = tileViewPanel;
       
        final Timer timer = new Timer(1500, null);
        timer.start();
       
        timer.addActionListener(new ActionListener() 
        {
            public void actionPerformed(ActionEvent evt) 
            {
                if(getCurrentIndex() == getScreenshots().size() - 1)
                {
                    timer.stop();
                    
                    playButton.setEnabled(true);
                    updatePrevAndNext();
                }
                
                tileViewPanel.removeAll();
                tileViewPanel.add(getScreenshots().get(getCurrentIndex()));
                frameNumberTextField.setText(String.valueOf(getCurrentIndex() + 1));
                setCurrentIndex(getCurrentIndex() + 1);
                
                myComponent.revalidate();
                myComponent.repaint();
            }
        });
    }//GEN-LAST:event_playButtonActionPerformed

    private void tileViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileViewButtonActionPerformed
        try
        {
            initScreenshots(getNumOfImages(), "screenshots", "5x5jrt", "png", true);
        } catch (URISyntaxException ex)
        {
            Logger.getLogger(FilmificationGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        addScreenshotsTileView(5, 3);
    }//GEN-LAST:event_tileViewButtonActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void skipToStartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipToStartButtonActionPerformed
        setCurrentIndex(0);
        addScreenshotsFullView(getCurrentIndex());
        frameNumberTextField.setText(String.valueOf(getCurrentIndex() + 1));
        updatePrevAndNext();
    }//GEN-LAST:event_skipToStartButtonActionPerformed

    private void skipToEndButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skipToEndButtonActionPerformed
        setCurrentIndex(getNumOfImages() - 1);
        addScreenshotsFullView(getCurrentIndex());
        frameNumberTextField.setText(String.valueOf(getCurrentIndex() + 1));
        updatePrevAndNext();
    }//GEN-LAST:event_skipToEndButtonActionPerformed
    
    public void initScreenshots(int numOfImages, String folder, 
            String filenameStart, String fileExtension, boolean isTileView) throws URISyntaxException
    {
        getScreenshots().clear();
        
        for (int i = 1; i <= numOfImages; i++)
        {
            BufferedImage img = null;
            try 
            {
                String path = "/" + folder + "/" + filenameStart + i + "." + fileExtension;
                img = ImageIO.read(new File(getClass().getResource(path).toURI()));
            } catch (IOException e) 
            {
                e.printStackTrace();
            }
            
            JLabel label = new JLabel(); 
            
            if(isTileView)
            {
                label.setSize(300, 210);
                label.setText("JRT Frame Number " + i);
                
                if(i == 1 || i == 2 || i == 11)
                {
                    screenshots.add(new JLabel());
                }
            }
            else
            {
                label.setSize(700, 490);
            }
            
            img = toBufferedImage(img.getScaledInstance(label.getWidth(), 
                    label.getHeight(), Image.SCALE_SMOOTH));
            
            ImageIcon imageIcon = new ImageIcon(img);
            label.setIcon(imageIcon);
            
            label.setHorizontalTextPosition(JLabel.CENTER);
            label.setVerticalTextPosition(JLabel.BOTTOM);
            label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            
            screenshots.add(label);
        }
    }
    
    public static BufferedImage toBufferedImage(Image img)
    {
        if (img instanceof BufferedImage)
        {
            return (BufferedImage) img;
        }

        // Create a buffered image with transparency
        BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);

        // Draw the image on to the buffered image
        Graphics2D bGr = bimage.createGraphics();
        bGr.drawImage(img, 0, 0, null);
        bGr.dispose();

        // Return the buffered image
        return bimage;
    }
    
    public void addScreenshotsTileView(int rows, int columns)
    {
        tileViewPanel.removeAll();
        
        tileViewPanel.setLayout(new java.awt.GridLayout(rows, columns));
        
        for(int i = 0; i < getScreenshots().size(); i++)
        {
            tileViewPanel.add(getScreenshots().get(i));
        }
        
        tileViewPanel.revalidate();
        tileViewPanel.repaint();
    }
    
    public void addScreenshotsFullView(int index)
    {
        tileViewPanel.removeAll();
        
        tileViewPanel.add(getScreenshots().get(index));
        
        tileViewPanel.revalidate();
        tileViewPanel.repaint();
    }
    
    // --------------- getters and setters --------------- //

    public ArrayList<JLabel> getScreenshots() {
        return screenshots;
    }

    public void setScreenshots(ArrayList<JLabel> screenshots) {
        this.screenshots = screenshots;
    }

    public int getNumOfImages() {
        return numOfImages;
    }

    public void setNumOfImages(int numOfImages) {
        this.numOfImages = numOfImages;
    }

    public int getCurrentIndex() {
        return currentIndex;
    }

    public void setCurrentIndex(int currentIndex) {
        this.currentIndex = currentIndex;
    }

    public Timer getT() {
        return t;
    }

    public void setT(Timer t) {
        this.t = t;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algoNameLabel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.ButtonGroup elementTypeButtonGroup;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel frameNumberLabel;
    private javax.swing.JTextField frameNumberTextField;
    private javax.swing.JButton fullViewButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton playButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton skipToEndButton;
    private javax.swing.JButton skipToStartButton;
    private javax.swing.JButton tileViewButton;
    private javax.swing.JPanel tileViewPanel;
    private javax.swing.JScrollPane tileViewScrollPane;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables
}
